{"version":3,"sources":["Filter.js","services/personServices.js","PersonForm.js","Persons.js","Notification.js","App.js","index.js"],"names":["Filter","filter","setFilter","onChange","event","target","value","baseUrl","axios","get","then","response","data","newObject","post","id","name","persons","setPersons","window","confirm","delete","alert","person","console","log","put","PersonForm","newName","setNewName","newNumber","setNewNumber","setErrorMessage","setMessageType","onSubmit","preventDefault","undefined","find","changedPerson","number","personServices","returnedPerson","map","setTimeout","catch","error","concat","type","Persons","personsToShow","toLowerCase","includes","onClick","Notification","message","messageType","className","App","useState","errorMessage","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65660fae.chunk.js","sourcesContent":["const Filter=({filter,setFilter})=>{\r\n    const handleFilter=(event)=>{\r\n        setFilter(event.target.value)\r\n      }\r\n\r\n    return(\r\n        <div>\r\n            <p>filter shown with</p> \r\n            <input onChange={handleFilter}></input>\r\n        </div>\r\n      )}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst eliminate = (id, name,persons,setPersons) => {\r\n    if (window.confirm(`Delete ${name}?`)) {\r\n        axios.delete(`${baseUrl}/${id}`)\r\n        alert(\"Delete succesfull\")\r\n        setPersons(persons.filter(person=>person.id!==id))\r\n    } else {\r\n        console.log(\"delete paused\")\r\n    }\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, eliminate, update }","import personServices from './services/personServices'\r\n\r\nconst PersonForm=({persons,setPersons,newName,setNewName,newNumber,setNewNumber,setErrorMessage,setMessageType})=>{\r\n    const handleSubmit=(event)=>{\r\n        event.preventDefault()\r\n        \r\n        if (persons.find(person=>person.name===newName)!==undefined){\r\n          if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n            const person = persons.find(person => person.name === newName)\r\n            const changedPerson = { ...person, number:newNumber }\r\n            \r\n            personServices\r\n            .update(person.id,changedPerson)\r\n            .then(returnedPerson => {\r\n              console.log(returnedPerson)\r\n              setPersons(persons.map(person => person.name !== newName ? person : returnedPerson))\r\n              setErrorMessage(`Updated ${person.name}`)\r\n              setMessageType(true)\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 5000)\r\n            })\r\n            .catch(error => {\r\n              setErrorMessage(\r\n                `Person '${person.name}' was already removed from server`\r\n              )\r\n              setMessageType(false)\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 5000)\r\n              setPersons(persons.filter(person => person.name !== newName))\r\n            })\r\n          }\r\n        }  \r\n        else{\r\n          const newPerson={\r\n            name:newName,\r\n            number:newNumber\r\n          }\r\n          \r\n          personServices\r\n          .create(newPerson)\r\n            .then(response => {\r\n              setPersons(persons.concat(response))\r\n              setErrorMessage(`Added ${response.name}`)\r\n              setMessageType(true)\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 5000)\r\n              })\r\n            .catch(error => {\r\n              setErrorMessage(error.response.data.error)\r\n              setMessageType(false)\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 5000)\r\n              })\r\n        }\r\n        setNewName(\"\")\r\n        setNewNumber(\"\")\r\n    }\r\n\r\n    const addPerson=(event)=>setNewName(event.target.value)\r\n    const addNumber=(event)=>setNewNumber(event.target.value)\r\n    \r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n        <div>    \r\n          name: <input onChange={addPerson} value={newName}/>\r\n          number: <input onChange={addNumber} value={newNumber}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import personServices from './services/personServices'\r\n\r\nconst Persons=({persons,filter,setPersons})=>{\r\n    const personsToShow=filter==='' \r\n    ? persons \r\n    : persons.filter(person=>person.name.toLowerCase().includes(filter))\r\n    \r\n    const eliminatePerson=(id,name)=>{\r\n        personServices\r\n        .eliminate(id,name,persons,setPersons)\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            {personsToShow.map(person=>{ \r\n            return(\r\n            <div key={person.name}>\r\n                <p>{person.name} {person.number}</p> \r\n                <button onClick={()=>eliminatePerson(person.id,person.name)}>delete</button>\r\n            </div>\r\n            )})}\r\n        </div>\r\n)}\r\n\r\nexport default Persons","import './styles.css'\r\n\r\nconst Notification=({message,messageType})=>{\r\n    if (message===null){\r\n        return null\r\n    }\r\n\r\n    const className=messageType ? \"success\" : \"error\"\r\n    return(\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter.js'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport personServices from './services/personServices'\nimport Notification from './Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filter,setFilter]=useState('')\n  const [errorMessage,setErrorMessage]=useState(null)\n  const [messageType,setMessageType]=useState(true)\n\n  useEffect(() => {\n    personServices\n    .getAll()\n    .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  \n  return (\n    <div>\n      <Notification message={errorMessage} messageType={messageType}/>\n      <h2>Phonebook</h2>\n      <Filter filter={filter} setFilter={setFilter}/>\n      <h2>Add a new</h2>\n      <PersonForm persons={persons} setPersons={setPersons} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} setErrorMessage={setErrorMessage} setMessageType={setMessageType}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} setPersons={setPersons}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}